Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"825fe6b4-d9fb-46a3-80f8-bedc4e376b40\" name=\"Changes\" comment=\"인기글 섹션 추가\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\\Users\\gyshim1\\.android\\avd\\Pixel_7.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$/app\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"BlindSJN\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"BlindSJN\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"BlindSJN\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"BlindSJN\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"other\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Shim\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Ordinary702&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/heakbomb/GrowStudio&quot;,\r\n    &quot;accountId&quot;: &quot;7e370a7a-1774-4a87-982d-659bca85cc62&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 0\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2uCiEYMbIYahKmw9TRyYimPinPm\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Android App.Apps.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"com.google.services.firebase.aqiPopupShown\": \"true\",\r\n    \"git-widget-placeholder\": \"1.0\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/SM/AndroidStudioProjects/GrowStudio\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Apps\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"BlindSJN.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"RESTORE_FRESH_INSTALL_ONLY\" value=\"false\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"825fe6b4-d9fb-46a3-80f8-bedc4e376b40\" name=\"Changes\" comment=\"\" />\r\n      <created>1741758847019</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1741758847019</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Merge from Won\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1743342392305</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1743342392305</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"사업자 인증 UI 제작 완.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1743343811728</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1743343811728</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"온보딩 스크린 제작\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1743864764583</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1743864764583</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"프로필화면 조금 고침\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1743866640699</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1743866640699</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"코스트 화면 UI/UX 수정\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744693271785</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744693271785</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"initial commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744856136967</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744856136968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"initial commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744856199082</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744856199082</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"인기글 섹션 추가\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1746650807233</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1746650807233</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"인기글 섹션 추가\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1746652181406</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1746652181406</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"FORK/1.0\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"캘린더 추가 (네비게이션 에러 못 고침)\" />\r\n    <MESSAGE value=\"Merge from Won\" />\r\n    <MESSAGE value=\"사업자 인증 UI 제작 완.\" />\r\n    <MESSAGE value=\"온보딩 스크린 제작\" />\r\n    <MESSAGE value=\"프로필화면 조금 고침\" />\r\n    <MESSAGE value=\"회원가입 화면 레이아웃 변경\" />\r\n    <MESSAGE value=\"회원가입 화면 레이아웃 변경(영찬 버전)\" />\r\n    <MESSAGE value=\"코스트 화면 UI/UX 수정\" />\r\n    <MESSAGE value=\"initial commit\" />\r\n    <MESSAGE value=\"인기글 섹션 추가\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"인기글 섹션 추가\" />\r\n  </component>\r\n  <component name=\"play_dynamic_filters_status\">\r\n    <option name=\"appIdToCheckInfo\">\r\n      <map>\r\n        <entry key=\"com.glowstudio.android.blindsjn\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1744086066085\" />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"com.glowstudio.android.blindsjn.test\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1744086066085\" />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a8ded16bcf6ee6c3770223b502d5f7ee762c2db6)
+++ b/.idea/workspace.xml	(date 1746859504424)
@@ -9,7 +9,18 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="825fe6b4-d9fb-46a3-80f8-bedc4e376b40" name="Changes" comment="인기글 섹션 추가" />
+    <list default="true" id="825fe6b4-d9fb-46a3-80f8-bedc4e376b40" name="Changes" comment="인기글 섹션 추가">
+      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/executionHistory/executionHistory.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/fileHashes.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.11.1/fileHashes/resourceHashesCache.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/glowstudio/android/blindsjn/ui/components/CommonComponents.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/glowstudio/android/blindsjn/ui/components/CommonComponents.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/BoardScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/BoardScreen.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/HomeScreen.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/HomeScreen.kt" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -72,7 +83,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="Shim" />
+        <entry key="$PROJECT_DIR$" value="1.01" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -114,7 +125,7 @@
     "cf.first.check.clang-format": "false",
     "cidr.known.project.marker": "true",
     "com.google.services.firebase.aqiPopupShown": "true",
-    "git-widget-placeholder": "1.0",
+    "git-widget-placeholder": "1.0.1",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "C:/Users/SM/AndroidStudioProjects/GrowStudio",
     "run.code.analysis.last.selected.profile": "pProject Default"
Index: app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/HomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.glowstudio.android.blindsjn.ui.screens\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.border\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.lazy.LazyRow\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.rememberScrollState\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.verticalScroll\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.KeyboardArrowRight\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.clip\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.style.TextOverflow\r\nimport androidx.compose.ui.unit.dp\r\nimport com.glowstudio.android.blindsjn.R\r\nimport com.glowstudio.android.blindsjn.ui.NewsViewModel\r\nimport com.google.accompanist.pager.ExperimentalPagerApi\r\nimport com.google.accompanist.pager.HorizontalPager\r\nimport com.google.accompanist.pager.HorizontalPagerIndicator\r\nimport com.google.accompanist.pager.rememberPagerState\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.lifecycle.viewmodel.compose.viewModel\r\nimport androidx.navigation.NavHostController\r\nimport coil.compose.AsyncImage\r\nimport com.google.gson.Gson\r\nimport java.net.URLEncoder\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.glowstudio.android.blindsjn.ui.theme.BlindSJNTheme\r\nimport androidx.core.text.HtmlCompat\r\nimport androidx.compose.material.icons.filled.ThumbUp\r\nimport androidx.compose.material.icons.filled.ChatBubbleOutline\r\n\r\n@OptIn(ExperimentalPagerApi::class, ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun HomeScreen(navController: NavHostController) {\r\n    val scrollState = rememberScrollState()\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .verticalScroll(scrollState)\r\n    ) {\r\n\r\n        // 배너 섹션\r\n        BannerSection()\r\n\r\n        // 바로가기 섹션\r\n        ShortcutSection(navController)\r\n\r\n        // 네이버 뉴스 섹션\r\n        NaverNewsSection(navController)\r\n\r\n        // 인기글 섹션\r\n        HotPostsSection(navController)\r\n\r\n        // 오늘의 매출 관리 섹션\r\n        SalesSection()\r\n    }\r\n}\r\n\r\n@OptIn(ExperimentalPagerApi::class)\r\n@Composable\r\nfun BannerSection() {\r\n    val pagerState = rememberPagerState()\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .height(200.dp)\r\n            .background(Color(0xFFF5F7FF))\r\n    ) {\r\n        HorizontalPager(\r\n            count = 4,\r\n            state = pagerState,\r\n        ) { page ->\r\n            Image(\r\n                painter = painterResource(id = R.drawable.login_image),\r\n                contentDescription = \"배너 이미지 $page\",\r\n                modifier = Modifier.fillMaxSize(),\r\n                contentScale = ContentScale.Crop\r\n            )\r\n        }\r\n\r\n        // 페이지 인디케이터\r\n        HorizontalPagerIndicator(\r\n            pagerState = pagerState,\r\n            modifier = Modifier\r\n                .align(Alignment.BottomCenter)\r\n                .padding(16.dp),\r\n            activeColor = MaterialTheme.colorScheme.primary,\r\n            inactiveColor = Color.Gray.copy(alpha = 0.5f)\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun ShortcutSection(navController: NavHostController) {\r\n    Column(modifier = Modifier.padding(16.dp)) {\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.SpaceBetween,\r\n            verticalAlignment = Alignment.CenterVertically\r\n        ) {\r\n            Text(\"바로가기\", fontWeight = FontWeight.Bold)\r\n            Icon(Icons.Default.KeyboardArrowRight, contentDescription = \"더보기\")\r\n        }\r\n\r\n        Spacer(modifier = Modifier.height(8.dp))\r\n\r\n        LazyRow(\r\n            horizontalArrangement = Arrangement.spacedBy(12.dp)\r\n        ) {\r\n            items(shortcutItems) { item ->\r\n                Box(\r\n                    modifier = Modifier\r\n                        .size(80.dp)\r\n                        .clip(RoundedCornerShape(8.dp))\r\n                        .border(1.dp, MaterialTheme.colorScheme.onSurface.copy(alpha = 0.1f), RoundedCornerShape(8.dp))\r\n                        .background(MaterialTheme.colorScheme.surface, RoundedCornerShape(8.dp))\r\n                        .clickable {\r\n                            when (item.title) {\r\n                                \"푸드코스트\" -> navController.navigate(\"foodCost\")\r\n                                \"캘린더\" -> navController.navigate(\"message\")\r\n                            }\r\n                        },\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    Column(\r\n                        horizontalAlignment = Alignment.CenterHorizontally,\r\n                        verticalArrangement = Arrangement.Center\r\n                    ) {\r\n                        Box(\r\n                            modifier = Modifier\r\n                                .size(40.dp)\r\n                                .background(MaterialTheme.colorScheme.primary.copy(alpha = 0.1f), RoundedCornerShape(8.dp)),\r\n                            contentAlignment = Alignment.Center\r\n                        ) {\r\n                            Text(\r\n                                text = item.emoji,\r\n                                style = MaterialTheme.typography.titleLarge\r\n                            )\r\n                        }\r\n                        Spacer(modifier = Modifier.height(4.dp))\r\n                        Text(\r\n                            text = item.title,\r\n                            style = MaterialTheme.typography.bodySmall,\r\n                            maxLines = 1,\r\n                            overflow = TextOverflow.Ellipsis\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// 바로가기 아이템 데이터 클래스\r\ndata class ShortcutItem(\r\n    val title: String,\r\n    val emoji: String\r\n)\r\n\r\n// 바로가기 아이템 목록\r\nprivate val shortcutItems = listOf(\r\n    ShortcutItem(\"푸드코스트\", \"\uD83C\uDF74\"),\r\n    ShortcutItem(\"캘린더\", \"\uD83D\uDCC5\")\r\n)\r\n\r\n@Composable\r\nfun HotPostsSection(navController: NavHostController) {\r\n    // 예시 데이터\r\n    val hotPosts = listOf(\r\n        HotPost(\"인기글 1\", \"05/07\", 11, 4),\r\n        HotPost(\"인기글 2\", \"04/29\", 10, 0),\r\n        HotPost(\"인기글 3\", \"04/29\", 13, 0),\r\n        HotPost(\"인기글 4\", \"04/28\", 25, 8)\r\n    )\r\n\r\n    Column(modifier = Modifier.padding(16.dp)) {\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.SpaceBetween,\r\n            verticalAlignment = Alignment.CenterVertically\r\n        ) {\r\n            Text(\"인기글글\", fontWeight = FontWeight.Bold)\r\n            TextButton(onClick = { navController.navigate(\"popular\") }) {\r\n                Text(\"더 보기\")\r\n            }\r\n        }\r\n        Spacer(modifier = Modifier.height(8.dp))\r\n\r\n        // 라운드 사각형 카드로 전체 감싸기\r\n        Surface(\r\n\r\n            shape = RoundedCornerShape(20.dp),\r\n            tonalElevation = 1.dp,\r\n            modifier = Modifier.fillMaxWidth()\r\n        ) {\r\n            Column {\r\n                hotPosts.forEachIndexed { idx, post ->\r\n                    HotPostListItem(post)\r\n                    // 마지막 아이템이 아니면 Divider 추가\r\n                    if (idx != hotPosts.lastIndex) {\r\n                        Divider(\r\n                            color = Color(0xFFE0E0E0),\r\n                            thickness = 1.dp,\r\n                            modifier = Modifier.padding(horizontal = 12.dp)\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ndata class HotPost(\r\n    val title: String,\r\n    val date: String,\r\n    val likeCount: Int,\r\n    val commentCount: Int\r\n)\r\n\r\n@Composable\r\nfun HotPostListItem(post: HotPost) {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(horizontal = 18.dp, vertical = 14.dp),\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        Column(modifier = Modifier.weight(1f)) {\r\n            Text(post.title, style = MaterialTheme.typography.bodyLarge, maxLines = 1)\r\n            Spacer(modifier = Modifier.height(4.dp))\r\n            Text(post.date, style = MaterialTheme.typography.bodySmall, color = Color.Gray)\r\n        }\r\n        Row(verticalAlignment = Alignment.CenterVertically) {\r\n            Icon(Icons.Filled.ThumbUp, contentDescription = \"좋아요\", tint = Color.Red, modifier = Modifier.size(18.dp))\r\n            Spacer(modifier = Modifier.width(4.dp))\r\n            Text(\"${post.likeCount}\", color = Color.Red, style = MaterialTheme.typography.bodySmall)\r\n            Spacer(modifier = Modifier.width(12.dp))\r\n            Icon(Icons.Filled.ChatBubbleOutline, contentDescription = \"댓글\", tint = Color(0xFF00B8D9), modifier = Modifier.size(18.dp))\r\n            Spacer(modifier = Modifier.width(4.dp))\r\n            Text(\"${post.commentCount}\", color = Color(0xFF00B8D9), style = MaterialTheme.typography.bodySmall)\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun NaverNewsSection(navController: NavHostController) {\r\n    val viewModel: NewsViewModel = viewModel()\r\n    val uiState by viewModel.uiState\r\n\r\n    // 화면 진입 시 기본 검색어로 뉴스 검색\r\n    LaunchedEffect(Unit) {\r\n        viewModel.searchNews(\"자영업\")\r\n    }\r\n\r\n    Column(modifier = Modifier.padding(16.dp)) {\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.SpaceBetween,\r\n            verticalAlignment = Alignment.CenterVertically\r\n        ) {\r\n            Text(\"새로운 소식\", fontWeight = FontWeight.Bold)\r\n            Icon(Icons.Default.KeyboardArrowRight, contentDescription = \"더보기\")\r\n        }\r\n\r\n        Spacer(modifier = Modifier.height(8.dp))\r\n\r\n        when {\r\n            uiState.isLoading -> {\r\n                CircularProgressIndicator()\r\n            }\r\n            uiState.error != null -> {\r\n                Text(uiState.error ?: \"오류\", color = Color.Red)\r\n            }\r\n            else -> {\r\n                LazyRow(horizontalArrangement = Arrangement.spacedBy(12.dp)) {\r\n                    items(uiState.newsList) { article ->\r\n                        Box(\r\n                            modifier = Modifier\r\n                                .width(300.dp)\r\n                                .height(120.dp)\r\n                                .clip(RoundedCornerShape(8.dp))\r\n                                .border(1.dp, MaterialTheme.colorScheme.onSurface.copy(alpha = 0.1f), RoundedCornerShape(8.dp))\r\n                                .background(MaterialTheme.colorScheme.surface, RoundedCornerShape(8.dp))\r\n                                .clickable {\r\n                                    val articleJson = URLEncoder.encode(Gson().toJson(article), \"UTF-8\")\r\n                                    navController.navigate(\"newsDetail/$articleJson\")\r\n                                }\r\n                        ) {\r\n                            Row(modifier = Modifier.fillMaxSize()) {\r\n                                Column(\r\n                                    modifier = Modifier\r\n                                        .weight(1f)\r\n                                        .padding(12.dp),\r\n                                    verticalArrangement = Arrangement.SpaceBetween\r\n                                ) {\r\n                                    Text(\r\n                                        text = HtmlCompat.fromHtml(article.title, HtmlCompat.FROM_HTML_MODE_LEGACY).toString(),\r\n                                        fontWeight = FontWeight.Bold,\r\n                                        maxLines = 2,\r\n                                        overflow = TextOverflow.Ellipsis\r\n                                    )\r\n                                    Spacer(modifier = Modifier.height(4.dp))\r\n                                    Text(\r\n                                        text = HtmlCompat.fromHtml(article.description, HtmlCompat.FROM_HTML_MODE_LEGACY).toString(),\r\n                                        maxLines = 3,\r\n                                        overflow = TextOverflow.Ellipsis\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun SalesSection() {\r\n    Column(modifier = Modifier.padding(16.dp)) {\r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.SpaceBetween,\r\n            verticalAlignment = Alignment.CenterVertically\r\n        ) {\r\n            Text(\"오늘의 매출 관리\", fontWeight = FontWeight.Bold)\r\n            Icon(Icons.Default.KeyboardArrowRight, contentDescription = \"더보기\")\r\n        }\r\n        \r\n        Spacer(modifier = Modifier.height(8.dp))\r\n        \r\n        Row(\r\n            modifier = Modifier.fillMaxWidth(),\r\n            horizontalArrangement = Arrangement.spacedBy(12.dp)\r\n        ) {\r\n           // 여기에 뭐 넣을지 고민 좀 해봐야 함\r\n\r\n        }\r\n    }\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun HomeScreenPreview() {\r\n    val navController = rememberNavController()\r\n    BlindSJNTheme {\r\n        HomeScreen(navController = navController)\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/HomeScreen.kt b/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/HomeScreen.kt
--- a/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/HomeScreen.kt	(revision a8ded16bcf6ee6c3770223b502d5f7ee762c2db6)
+++ b/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/HomeScreen.kt	(date 1746859722322)
@@ -40,6 +40,7 @@
 import androidx.core.text.HtmlCompat
 import androidx.compose.material.icons.filled.ThumbUp
 import androidx.compose.material.icons.filled.ChatBubbleOutline
+import com.glowstudio.android.blindsjn.ui.components.SectionCard
 
 @OptIn(ExperimentalPagerApi::class, ExperimentalMaterial3Api::class)
 @Composable
@@ -50,22 +51,18 @@
         modifier = Modifier
             .fillMaxSize()
             .verticalScroll(scrollState)
+            .background(MaterialTheme.colorScheme.background)
     ) {
-
         // 배너 섹션
-        BannerSection()
-
+        SectionCard { BannerSection() }
         // 바로가기 섹션
-        ShortcutSection(navController)
-
+        SectionCard { ShortcutSection(navController) }
         // 네이버 뉴스 섹션
-        NaverNewsSection(navController)
-
+        SectionCard { NaverNewsSection(navController) }
         // 인기글 섹션
-        HotPostsSection(navController)
-
+        SectionCard { HotPostsSection(navController) }
         // 오늘의 매출 관리 섹션
-        SalesSection()
+        SectionCard { SalesSection() }
     }
 }
 
Index: app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/BoardScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.glowstudio.android.blindsjn.ui.screens\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.foundation.border\r\nimport androidx.compose.foundation.lazy.grid.GridCells\r\nimport androidx.compose.foundation.lazy.grid.LazyVerticalGrid\r\nimport androidx.compose.foundation.lazy.grid.items\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.navigation.NavController\r\n\r\ndata class BoardCategory(\r\n    val emoji: String,\r\n    val title: String,\r\n    val postCount: String\r\n)\r\n\r\n// TODO: 'n개의 새 게시물'은 실제 값이 들어가야 함\r\nval boardCategories = listOf(\r\n    // 아이콘은 이모지를 사용함\r\n    BoardCategory(\"\uD83C\uDF74\", \"음식점 및 카페\", \"298개의 새 게시물\"),\r\n    BoardCategory(\"\uD83D\uDECD\uFE0F\", \"쇼핑 및 리테일\", \"128개의 새 게시물\"),\r\n    BoardCategory(\"\uD83D\uDC8A\", \"건강 및 의료\", \"57개의 새 게시물\"),\r\n    BoardCategory(\"\uD83C\uDFE8\", \"숙박 및 여행\", \"298개의 새 게시물\"),\r\n    BoardCategory(\"\uD83D\uDCDA\", \"교육 및 학습\", \"36개의 새 게시물\"),\r\n    BoardCategory(\"\uD83C\uDFAE\", \"여가 및 오락\", \"98개의 새 게시물\"),\r\n    BoardCategory(\"\uD83D\uDCB0\", \"금융 및 공공기관\", \"20개의 새 게시물\")\r\n)\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun BoardScreen(navController: NavController) {\r\n    Scaffold(\r\n        content = { paddingValues ->\r\n            LazyVerticalGrid(\r\n                columns = GridCells.Fixed(2), // 한 줄에 2개씩 배치\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .padding(paddingValues)\r\n                    .padding(8.dp), // 전체 여백\r\n                verticalArrangement = Arrangement.spacedBy(4.dp), // 아이템 간 세로 간격\r\n                horizontalArrangement = Arrangement.spacedBy(4.dp) // 아이템 간 가로 간격\r\n            ) {\r\n                items(boardCategories) { category ->\r\n                    BoardCategoryItem(\r\n                        category = category,\r\n                        // 각 게시판 클릭 시, navctrl에 게시판 경로 전달\r\n                        onClick = {\r\n                            navController.navigate(\"boardDetail/${category.title}\")\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n@Composable\r\nfun BoardCategoryItem(category: BoardCategory, onClick: () -> Unit) {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .clickable(onClick = onClick)\r\n            .padding(4.dp) // 아이템 외부 여백\r\n            .border(1.dp, MaterialTheme.colorScheme.onSurface.copy(alpha = 0.1f), MaterialTheme.shapes.medium) // 테두리\r\n            .background(MaterialTheme.colorScheme.surface, MaterialTheme.shapes.medium) // 배경색과 모서리 둥글기\r\n            .padding(8.dp), // 아이템 내부 여백\r\n        verticalAlignment = Alignment.CenterVertically // 아이콘과 텍스트를 수직 중앙 정렬\r\n    ) {\r\n        // 아이콘 배경\r\n        Box(\r\n            modifier = Modifier\r\n                .size(48.dp) // 아이콘 배경 크기\r\n                .background(MaterialTheme.colorScheme.primary.copy(alpha = 0.1f), MaterialTheme.shapes.medium), // 아이콘 배경색과 둥근 모서리\r\n            contentAlignment = Alignment.Center\r\n        ) {\r\n            // 이모지 또는 아이콘\r\n            Text(\r\n                text = category.emoji,\r\n                style = MaterialTheme.typography.titleLarge\r\n            )\r\n        }\r\n\r\n        Spacer(modifier = Modifier.width(12.dp)) // 아이콘과 텍스트 사이 간격\r\n\r\n        // 제목과 게시물 수\r\n        Column {\r\n            Text( // 게시판 이름\r\n                text = category.title,\r\n                style = MaterialTheme.typography.bodyMedium,\r\n                maxLines = 1,\r\n                color = MaterialTheme.colorScheme.onSurface\r\n            )\r\n            Text( // 새 게시물 수\r\n                text = category.postCount,\r\n                style = MaterialTheme.typography.bodySmall,\r\n                maxLines = 1,\r\n                color = MaterialTheme.colorScheme.onSurfaceVariant\r\n            )\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/BoardScreen.kt b/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/BoardScreen.kt
--- a/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/BoardScreen.kt	(revision a8ded16bcf6ee6c3770223b502d5f7ee762c2db6)
+++ b/app/src/main/java/com/glowstudio/android/blindsjn/ui/screens/BoardScreen.kt	(date 1746859567550)
@@ -13,6 +13,8 @@
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.unit.dp
 import androidx.navigation.NavController
+import com.glowstudio.android.blindsjn.ui.components.ListItemCard
+import androidx.compose.ui.tooling.preview.Preview
 
 data class BoardCategory(
     val emoji: String,
@@ -36,6 +38,14 @@
 @Composable
 fun BoardScreen(navController: NavController) {
     Scaffold(
+        topBar = {
+            TopAppBar(
+                title = { Text("게시판 목록", color = MaterialTheme.colorScheme.onBackground) },
+                colors = TopAppBarDefaults.topAppBarColors(
+                    containerColor = MaterialTheme.colorScheme.background
+                )
+            )
+        },
         content = { paddingValues ->
             LazyVerticalGrid(
                 columns = GridCells.Fixed(2), // 한 줄에 2개씩 배치
@@ -47,61 +57,45 @@
                 horizontalArrangement = Arrangement.spacedBy(4.dp) // 아이템 간 가로 간격
             ) {
                 items(boardCategories) { category ->
-                    BoardCategoryItem(
-                        category = category,
-                        // 각 게시판 클릭 시, navctrl에 게시판 경로 전달
-                        onClick = {
-                            navController.navigate("boardDetail/${category.title}")
-                        }
-                    )
-                }
-            }
-        }
-    )
-}
-
-@Composable
-fun BoardCategoryItem(category: BoardCategory, onClick: () -> Unit) {
-    Row(
-        modifier = Modifier
-            .fillMaxWidth()
-            .clickable(onClick = onClick)
-            .padding(4.dp) // 아이템 외부 여백
-            .border(1.dp, MaterialTheme.colorScheme.onSurface.copy(alpha = 0.1f), MaterialTheme.shapes.medium) // 테두리
-            .background(MaterialTheme.colorScheme.surface, MaterialTheme.shapes.medium) // 배경색과 모서리 둥글기
-            .padding(8.dp), // 아이템 내부 여백
-        verticalAlignment = Alignment.CenterVertically // 아이콘과 텍스트를 수직 중앙 정렬
-    ) {
-        // 아이콘 배경
-        Box(
-            modifier = Modifier
-                .size(48.dp) // 아이콘 배경 크기
-                .background(MaterialTheme.colorScheme.primary.copy(alpha = 0.1f), MaterialTheme.shapes.medium), // 아이콘 배경색과 둥근 모서리
-            contentAlignment = Alignment.Center
-        ) {
-            // 이모지 또는 아이콘
-            Text(
-                text = category.emoji,
-                style = MaterialTheme.typography.titleLarge
-            )
-        }
-
-        Spacer(modifier = Modifier.width(12.dp)) // 아이콘과 텍스트 사이 간격
-
-        // 제목과 게시물 수
-        Column {
-            Text( // 게시판 이름
-                text = category.title,
-                style = MaterialTheme.typography.bodyMedium,
-                maxLines = 1,
-                color = MaterialTheme.colorScheme.onSurface
-            )
-            Text( // 새 게시물 수
-                text = category.postCount,
-                style = MaterialTheme.typography.bodySmall,
-                maxLines = 1,
-                color = MaterialTheme.colorScheme.onSurfaceVariant
-            )
+                    ListItemCard(onClick = {
+                        navController.navigate("boardDetail/${category.title}")
+                    }) {
+                        Box(
+                            modifier = Modifier
+                                .size(48.dp)
+                                .background(MaterialTheme.colorScheme.primary.copy(alpha = 0.1f), MaterialTheme.shapes.medium),
+                            contentAlignment = Alignment.Center
+                        ) {
+                            Text(
+                                text = category.emoji,
+                                style = MaterialTheme.typography.titleLarge
+                            )
+                        }
+                        Spacer(modifier = Modifier.width(12.dp))
+                        Column {
+                            Text(
+                                text = category.title,
+                                style = MaterialTheme.typography.bodyMedium,
+                                maxLines = 1,
+                                color = MaterialTheme.colorScheme.onSurface
+                            )
+                            Text(
+                                text = category.postCount,
+                                style = MaterialTheme.typography.bodySmall,
+                                maxLines = 1,
+                                color = MaterialTheme.colorScheme.onSurfaceVariant
+                            )
+                        }
+                    }
+                }
+            }
         }
-    }
+    )
+}
+
+@Preview(showBackground = true)
+@Composable
+fun BoardScreenPreview() {
+    val navController = androidx.navigation.compose.rememberNavController()
+    BoardScreen(navController = navController)
 }
