Index: app/src/main/java/com/glowstudio/android/blindsjn/feature/main/view/MainScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.glowstudio.android.blindsjn.feature.main.view\n\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.rememberScrollState\nimport androidx.compose.foundation.verticalScroll\nimport androidx.compose.material3.*\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Modifier\nimport androidx.lifecycle.viewmodel.compose.viewModel\nimport androidx.navigation.compose.rememberNavController\nimport com.glowstudio.android.blindsjn.ui.navigation.AppNavHost\nimport com.glowstudio.android.blindsjn.feature.main.viewmodel.TopBarViewModel\nimport com.glowstudio.android.blindsjn.feature.main.viewmodel.NavigationViewModel\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.ui.tooling.preview.Preview\nimport com.glowstudio.android.blindsjn.feature.main.view.TopBarMain\nimport com.glowstudio.android.blindsjn.feature.main.view.TopBarDetail\nimport com.glowstudio.android.blindsjn.feature.main.viewmodel.TopBarType\nimport com.glowstudio.android.blindsjn.feature.board.view.BoardScreen\nimport com.glowstudio.android.blindsjn.feature.board.view.BoardDetailScreen\nimport com.glowstudio.android.blindsjn.feature.board.view.WritePostScreen\nimport com.glowstudio.android.blindsjn.feature.board.view.PostDetailScreen\nimport com.glowstudio.android.blindsjn.feature.home.HomeScreen\nimport com.glowstudio.android.blindsjn.feature.profile.ProfileScreen\nimport com.glowstudio.android.blindsjn.feature.popular.PopularScreen\nimport com.glowstudio.android.blindsjn.feature.calendar.MessageScreen\nimport com.glowstudio.android.blindsjn.ui.screens.AddScheduleScreen\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.NavType\nimport androidx.navigation.navArgument\nimport java.net.URLDecoder\nimport java.net.URLEncoder\nimport com.google.gson.Gson\nimport com.glowstudio.android.blindsjn.ui.theme.BlindSJNTheme\nimport com.glowstudio.android.blindsjn.ui.components.banner.BannerSection\nimport com.glowstudio.android.blindsjn.ui.components.shortcut.ShortcutSection\nimport com.glowstudio.android.blindsjn.ui.components.news.NaverNewsSection\nimport com.glowstudio.android.blindsjn.ui.components.hotpost.HotPostsSection\nimport com.glowstudio.android.blindsjn.ui.components.sales.SalesSection\nimport com.glowstudio.android.blindsjn.feature.home.NewsDetailScreen\nimport com.glowstudio.android.blindsjn.data.model.Article\n\n/**\n * 메인 스크린: 상단바, 하단 네비게이션 바, 내부 컨텐츠(AppNavHost)를 포함하여 전체 화면 전환을 관리합니다.\n */\n\n@Preview\n@Composable\nfun MainScreen(\n    topBarViewModel: TopBarViewModel = viewModel(),\n    navigationViewModel: NavigationViewModel = viewModel()\n) {\n    // 하나의 NavController 생성\n    val navController = rememberNavController()\n    // TopBarViewModel에서 상단바 상태를 관찰\n    val topBarState by topBarViewModel.topBarState.collectAsState()\n\n    Scaffold(\n        // 상단바: TopBarViewModel의 상태를 기반으로 동적으로 업데이트됨\n        topBar = {\n            when (topBarState.type) {\n                TopBarType.MAIN -> TopBarMain(\n                    rightContent = {\n                        // 예시: IconButton 등 원하는 컴포넌트 추가\n                    }\n                )\n                TopBarType.DETAIL -> TopBarDetail(\n                    title = topBarState.title,\n                    onBackClick = { navController.navigateUp() },\n                    onSearchClick = { /* TODO: 검색 동작 구현 */ },\n                    onMoreClick = { /* TODO: 더보기 동작 구현 */ }\n                )\n            }\n        },\n        // 하단 네비게이션 바\n        bottomBar = {\n            BottomNavigationBar(\n                navController = navController,\n                viewModel = navigationViewModel\n            )\n        },\n        // 내부 컨텐츠: AppNavHost에 navController와 TopBarViewModel 전달\n        content = { paddingValues ->\n            // paddingValues에 추가 top padding(예: 16.dp)을 더해 상단바와의 여백을 확보합니다.\n            Box(modifier = Modifier.padding(paddingValues)) {\n                NavHost(\n                    navController = navController,\n                    startDestination = \"home\"\n                ) {\n                    composable(\"home\") { HomeScreen(navController) }\n                    composable(\"board\") { BoardScreen(navController) }\n                    composable(\"popular\") { PopularScreen() }\n                    composable(\"message\") { MessageScreen(navController) }\n                    composable(\"profile\") { ProfileScreen(\n                        onLogoutClick = { /* ... */ },\n                        onBusinessCertificationClick = { /* ... */ },\n                        onProfileEditClick = { /* ... */ },\n                        onContactEditClick = { /* ... */ }\n                    ) }\n                    composable(\"paymanagement\") {\n                        PayManagementScreen(\n                            onNavigateToFoodCost = { navController.navigate(\"foodcoast\") }\n                        )\n                    }\n                    composable(\"boardDetail/{title}\") { backStackEntry ->\n                        val encodedTitle = backStackEntry.arguments?.getString(\"title\") ?: \"\"\n                        val title = URLDecoder.decode(encodedTitle, \"UTF-8\")\n                        BoardDetailScreen(navController, title)\n                    }\n                    composable(\n                        route = \"writePost?tags={tags}\",\n                        arguments = listOf(\n                            navArgument(\"tags\") {\n                                type = NavType.StringType\n                                nullable = true\n                                defaultValue = null\n                            }\n                        )\n                    ) { backStackEntry ->\n                        val tags = backStackEntry.arguments?.getString(\"tags\")\n                        WritePostScreen(navController, tags)\n                    }\n                    composable(\n                        route = \"postDetail/{postId}\",\n                        arguments = listOf(\n                            navArgument(\"postId\") {\n                                type = NavType.StringType\n                            }\n                        )\n                    ) { backStackEntry ->\n                        val postId = backStackEntry.arguments?.getString(\"postId\") ?: \"\"\n                        PostDetailScreen(navController, postId)\n                    }\n                    composable(\"addSchedule\") {\n                        AddScheduleScreen(\n                            onCancel = { navController.navigateUp() },\n                            onSave = { schedule ->\n                                // TODO: 일정 저장 로직 구현\n                                navController.navigateUp()\n                            }\n                        )\n                    }\n                    composable(\"news_detail/{articleJson}\") { backStackEntry ->\n                        val articleJson = backStackEntry.arguments?.getString(\"articleJson\")\n                        val article = try {\n                            Gson().fromJson(URLDecoder.decode(articleJson, \"UTF-8\"), Article::class.java)\n                        } catch (e: Exception) {\n                            null\n                        }\n\n                        if (article != null) {\n                            NewsDetailScreen(\n                                title = article.title ?: \"제목 없음\",\n                                content = article.content,\n                                description = article.description,\n                                imageUrl = article.urlToImage\n                            )\n                        }\n                    }\n                }\n            }\n        }\n    )\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/glowstudio/android/blindsjn/feature/main/view/MainScreen.kt b/app/src/main/java/com/glowstudio/android/blindsjn/feature/main/view/MainScreen.kt
--- a/app/src/main/java/com/glowstudio/android/blindsjn/feature/main/view/MainScreen.kt	(revision 50835e625962463bab2eedb0b3d254546b1c8601)
+++ b/app/src/main/java/com/glowstudio/android/blindsjn/feature/main/view/MainScreen.kt	(date 1747586585061)
@@ -98,11 +98,13 @@
                         onProfileEditClick = { /* ... */ },
                         onContactEditClick = { /* ... */ }
                     ) }
+                    /* TODO: 추후 매출 관리 기능 구현 시 사용
                     composable("paymanagement") {
                         PayManagementScreen(
                             onNavigateToFoodCost = { navController.navigate("foodcoast") }
                         )
                     }
+                    */
                     composable("boardDetail/{title}") { backStackEntry ->
                         val encodedTitle = backStackEntry.arguments?.getString("title") ?: ""
                         val title = URLDecoder.decode(encodedTitle, "UTF-8")
Index: .idea/deploymentTargetSelector.xml
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
deleted file mode 100644
--- a/.idea/deploymentTargetSelector.xml	(revision 50835e625962463bab2eedb0b3d254546b1c8601)
+++ /dev/null	(revision 50835e625962463bab2eedb0b3d254546b1c8601)
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetSelector">
-    <selectionStates>
-      <SelectionState runConfigName="Apps">
-        <option name="selectionMode" value="DROPDOWN" />
-      </SelectionState>
-      <SelectionState runConfigName="ColorPalettePreview">
-        <option name="selectionMode" value="DROPDOWN" />
-      </SelectionState>
-    </selectionStates>
-  </component>
-</project>
\ No newline at end of file
